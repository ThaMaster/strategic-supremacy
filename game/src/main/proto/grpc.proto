syntax = "proto3";
import "google/protobuf/empty.proto";

option java_multiple_files = true;
option java_package = "proto";
option java_outer_classname = "Proto";

package grpc;

message Position {
  int32 x = 1;
  int32 y = 2;
}

message PlayerUnit {
  int64 unitId = 1;
  int64 targetUnitId = 2;
  int64 flagId = 3;
  string unitType = 4;
  Position position = 5;
  Position destination = 6;
  int32 maxHp = 7;
  int32 currentHp = 8;
  int32 speedBuff = 9;
  int32 attackBuff = 10;
}

message EntitySkeleton {
  int64 id = 1;
  string unitType = 2;
  Position position = 3;
}

message UserSkeletons {
  int64 userId = 1;
  repeated EntitySkeleton skeletons = 2;
}

message Reward {
  int32 quantity = 1;
  string reward = 2;
}

message Collectable {
  int64 id = 1;
  Position position = 2;
  string type = 3;
  Reward reward = 4;
}

message Environment {
  int64 id = 1;
  int64 userId = 3;
  Position position = 4;
  string type = 5;
  int32 remainingResource = 6;
}

message StartGameRequest {
  repeated UserSkeletons entities = 1;
  repeated Collectable collectables = 2;
  repeated Environment environments = 3;
}

message L1Message {
  int64 userId = 1;
  repeated PlayerUnit units = 2;
  int32 severity = 3;
}

message L2Message {
  int64 userId = 1;
  repeated EntitySkeleton entities = 2;
  repeated int64 pickedUpCollectables = 3;
  repeated Collectable spawnedCollectables = 4;
  repeated Environment environments = 5;
  int32 severity = 6;
}

message L3Message {
  int32 messageCount = 1;
  repeated UserSkeletons entities = 2;
  repeated int64 pickedUpCollectables = 3;
  repeated Collectable spawnedCollectables = 4;
  int64 remainingTime = 5;
  int64 currentScoreLeader = 6;
  UserScore userScore = 7;
  repeated Environment environments = 8;
  int32 severity = 9;
}

message UserScore {
  int64 id = 1;
  int32 score = 2;
}

message User {
  int64 id = 1;
  string ip = 2;
  int32 port = 3;
  string username = 4;
}

message DetailedLobbyInfo {
  int64 id = 1;
  string lobbyName = 2;
  User leader = 3;
  repeated User users = 4;
  int32 maxPlayers = 5;
  string selectedMap = 6;
}

message CandidateLeaderRequest {
  int32 msgCount = 1;
  int64 userId = 2;
}

message CandidateLeaderResponse {
  bool acknowledgement = 1;
}

message UserId {
  int64 userId = 1;
}

service GameService {
  rpc removePlayerUnits (UserSkeletons) returns (google.protobuf.Empty);
  rpc updateLobby(DetailedLobbyInfo) returns (google.protobuf.Empty);
  rpc l1Update (L1Message) returns (google.protobuf.Empty);
  rpc l2Update (L2Message) returns (google.protobuf.Empty);
  rpc l3Update(L3Message) returns (google.protobuf.Empty);
  rpc defeatUpdate (UserId) returns (google.protobuf.Empty);
  rpc requestVote(CandidateLeaderRequest) returns (CandidateLeaderResponse);
  rpc notifyNewLeader(UserId) returns (google.protobuf.Empty);
  rpc startGame (StartGameRequest) returns (google.protobuf.Empty);
  rpc nextRound (StartGameRequest) returns (google.protobuf.Empty);
  rpc endGameMessage (UserScore) returns (google.protobuf.Empty);
}